// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingSystem.API.DataAccess;

namespace VotingSystem.API.Migrations
{
    [DbContext(typeof(VotingContext))]
    [Migration("20210301141701_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("VotingSystem.API.Models.Election", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ElectionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectionType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("VotingSystem.API.Models.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserRole")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SystemUser");
                });

            modelBuilder.Entity("VotingSystem.API.Models.Candidate", b =>
                {
                    b.HasBaseType("VotingSystem.API.Models.SystemUser");

                    b.Property<bool>("CanApply")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Occupation")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParticipatingIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PoliticalParty")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Candidate");
                });

            modelBuilder.Entity("VotingSystem.API.Models.Voter", b =>
                {
                    b.HasBaseType("VotingSystem.API.Models.SystemUser");

                    b.Property<bool>("CanVote")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasVoted")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Voter");
                });

            modelBuilder.Entity("VotingSystem.API.Models.SystemUser", b =>
                {
                    b.HasOne("VotingSystem.API.Models.Election", null)
                        .WithMany("CandidateList")
                        .HasForeignKey("ElectionId");
                });
#pragma warning restore 612, 618
        }
    }
}
